/*
 * Copyright 2013 Oliver Schinagl
 *
 * Oliver Schinagl <oliver@schinagl.nl>
 *
 * The code contained herein is licensed under the GNU General Public
 * License. You may obtain a copy of the GNU General Public License
 * Version 2 or later at the following locations:
 *
 * http://www.opensource.org/licenses/gpl-license.html
 * http://www.gnu.org/copyleft/gpl.html
 */

/dts-v1/;
/include/ "sun7i-a20.dtsi"
/include/ "sunxi-common-regulators.dtsi"

/ {
	model = "Cubietech Cubietruck";
	compatible = "cubietech,cubietruck", "allwinner,sun7i-a20";

	soc@01c00000 {
		nfc: nand@01c03000 {
			pinctrl-names = "default";
			pinctrl-0 = <&nand_pins_a &nand_cs0_pins_a &nand_rb0_pins_a>;
			status = "okay";

			nand@0 {
				#address-cells = <2>;
				#size-cells = <2>;
				reg = <0>;
				allwinner,rb = <0>;
				nand-ecc-mode = "hw";
				nand-rnd-mode = "hw";

				boot0@0 {
					label = "boot0";
					reg = /bits/ 64 <0x0 0x200000>;
					nand-ecc-mode = "hw_syndrome";
					nand-randomizer-seeds = /bits/ 16 <0x4a80>;
				};

				boot0-rescue@200000 {
					label = "boot0-rescue";
					reg = /bits/ 64 <0x200000 0x200000>;
					nand-ecc-mode = "hw_syndrome";
					nand-rnd-mode = "hw";
					nand-randomizer-seeds = /bits/ 16 <0x4a80>;
				};

				main@200000 {
					label = "main";
					reg = /bits/ 64 <0x400000 0x1ffc00000>;
					nand-ecc-mode = "hw";
					nand-rnd-mode = "hw";
					nand-randomizer-seeds = /bits/ 16 <
						0x2b75 0x0bd0 0x5ca3 0x62d1 0x1c93 0x07e9 0x2162 0x3a72
						0x0d67 0x67f9 0x1be7 0x077d 0x032f 0x0dac 0x2716 0x2436
						0x7922 0x1510 0x3860 0x5287 0x480f 0x4252 0x1789 0x5a2d
						0x2a49 0x5e10 0x437f 0x4b4e 0x2f45 0x216e 0x5cb7 0x7130
						0x2a3f 0x60e4 0x4dc9 0x0ef0 0x0f52 0x1bb9 0x6211 0x7a56
						0x226d 0x4ea7 0x6f36 0x3692 0x38bf 0x0c62 0x05eb 0x4c55
						0x60f4 0x728c 0x3b6f 0x2037 0x7f69 0x0936 0x651a 0x4ceb
						0x6218 0x79f3 0x383f 0x18d9 0x4f05 0x5c82 0x2912 0x6f17
						0x6856 0x5938 0x1007 0x61ab 0x3e7f 0x57c2 0x542f 0x4f62
						0x7454 0x2eac 0x7739 0x42d4 0x2f90 0x435a 0x2e52 0x2064
						0x637c 0x66ad 0x2c90 0x0bad 0x759c 0x0029 0x0986 0x7126
						0x1ca7 0x1605 0x386a 0x27f5 0x1380 0x6d75 0x24c3 0x0f8e
						0x2b7a 0x1418 0x1fd1 0x7dc1 0x2d8e 0x43af 0x2267 0x7da3
						0x4e3d 0x1338 0x50db 0x454d 0x764d 0x40a3 0x42e6 0x262b
						0x2d2e 0x1aea 0x2e17 0x173d 0x3a6e 0x71bf 0x25f9 0x0a5d
						0x7c57 0x0fbe 0x46ce 0x4939 0x6b17 0x37bb 0x3e91 0x76db>;
				};
			};
		};

		mmc0: mmc@01c0f000 {
			pinctrl-names = "default";
			pinctrl-0 = <&mmc0_pins_a>, <&mmc0_cd_pin_reference_design>;
			vmmc-supply = <&reg_vcc3v3>;
			bus-width = <4>;
			cd-gpios = <&pio 7 1 0>; /* PH1 */
			cd-inverted;
			status = "okay";
		};

		mmc3: mmc@01c12000 {
			#address-cells = <1>;
			#size-cells = <0>;

			pinctrl-names = "default";
			pinctrl-0 = <&mmc3_pins_a>;
			vmmc-supply = <&reg_vmmc3>;
			bus-width = <4>;
			non-removable;
			status = "okay";

			brcmf: bcrmf@1 {
				reg = <1>;
				compatible = "brcm,bcm4329-fmac";
				interrupt-parent = <&pio>;
				interrupts = <10 8>; /* PH10 / EINT10 */
				interrupt-names = "host-wake";
			};
		};

		usbphy: phy@01c13400 {
			usb0_vbus-supply = <&reg_usb0_vbus>;
			usb1_vbus-supply = <&reg_usb1_vbus>;
			usb2_vbus-supply = <&reg_usb2_vbus>;
			status = "okay";
		};

		ehci0: usb@01c14000 {
			status = "okay";
		};

		ohci0: usb@01c14400 {
			status = "okay";
		};

		ahci: sata@01c18000 {
			target-supply = <&reg_ahci_5v>;
			status = "okay";
		};

		ehci1: usb@01c1c000 {
			status = "okay";
		};

		ohci1: usb@01c1c400 {
			status = "okay";
		};

		pinctrl@01c20800 {
			mmc3_pins_a: mmc3@0 {
				/* AP6210 requires pull-up */
				allwinner,pull = <1>;
			};

			vmmc3_pin_cubietruck: vmmc3_pin@0 {
				allwinner,pins = "PH9";
				allwinner,function = "gpio_out";
				allwinner,drive = <0>;
				allwinner,pull = <0>;
			};

			ahci_pwr_pin_cubietruck: ahci_pwr_pin@1 {
				allwinner,pins = "PH12";
				allwinner,function = "gpio_out";
				allwinner,drive = <0>;
				allwinner,pull = <0>;
			};

			led_pins_cubietruck: led_pins@0 {
				allwinner,pins = "PH7", "PH11", "PH20", "PH21";
				allwinner,function = "gpio_out";
				allwinner,drive = <0>;
				allwinner,pull = <0>;
			};

			usb0_vbus_pin_a: usb0_vbus_pin@0 {
				allwinner,pins = "PH17";
				allwinner,function = "gpio_out";
				allwinner,drive = <0>;
				allwinner,pull = <0>;
			};

			bt_pwr_pin: bt_pwr_pin@0 {
				allwinner,pins = "PH18";
				allwinner,function = "gpio_out";
				allwinner,drive = <0>;
				allwinner,pull = <0>;
			};

			bt_wake_pin: bt_wake_pin@0 {
				allwinner,pins = "PH24";
				allwinner,function = "gpio_out";
				allwinner,drive = <0>;
				allwinner,pull = <0>;
			};
		};

		pwm: pwm@01c20e00 {
			pinctrl-names = "default";
			pinctrl-0 = <&pwm0_pins_a>, <&pwm1_pins_a>;
			status = "okay";
		};

		ir0: ir@01c21800 {
			pinctrl-names = "default";
			pinctrl-0 = <&ir0_pins_a>;
			status = "okay";
		};

		uart0: serial@01c28000 {
			pinctrl-names = "default";
			pinctrl-0 = <&uart0_pins_a>;
			status = "okay";
		};

		uart2: serial@01c28800 {
			pinctrl-names = "default";
			pinctrl-0 = <&uart2_pins_a>;
			status = "okay";
		};

		i2c0: i2c@01c2ac00 {
			pinctrl-names = "default";
			pinctrl-0 = <&i2c0_pins_a>;
			status = "okay";

			axp209: pmic@34 {
				compatible = "x-powers,axp209";
				reg = <0x34>;
				interrupt-parent = <&nmi_intc>;
				interrupts = <0 8>;

				interrupt-controller;
				#interrupt-cells = <1>;
			};
		};

		i2c1: i2c@01c2b000 {
			pinctrl-names = "default";
			pinctrl-0 = <&i2c1_pins_a>;
			status = "okay";
		};

		i2c2: i2c@01c2b400 {
			pinctrl-names = "default";
			pinctrl-0 = <&i2c2_pins_a>;
			status = "okay";
		};

		gmac: ethernet@01c50000 {
			pinctrl-names = "default";
			pinctrl-0 = <&gmac_pins_rgmii_a>;
			phy = <&phy1>;
			phy-mode = "rgmii";
			status = "okay";

			phy1: ethernet-phy@1 {
				reg = <1>;
			};
		};
	};

	leds {
		compatible = "gpio-leds";
		pinctrl-names = "default";
		pinctrl-0 = <&led_pins_cubietruck>;

		blue {
			label = "cubietruck:blue:usr";
			gpios = <&pio 7 21 0>;
			linux,default-trigger = "cpu0";
		};

		orange {
			label = "cubietruck:orange:usr";
			gpios = <&pio 7 20 0>;
			linux,default-trigger = "nand-disk";
		};

		white {
			label = "cubietruck:white:usr";
			gpios = <&pio 7 11 0>;
			linux,default-trigger = "cpu1";
		};

		green {
			label = "cubietruck:green:usr";
			gpios = <&pio 7 7 0>;
			linux,default-trigger = "mmc0";
		};
	};

	reg_ahci_5v: ahci-5v {
		pinctrl-0 = <&ahci_pwr_pin_cubietruck>;
		gpio = <&pio 7 12 0>;
		status = "okay";
	};

	reg_usb0_vbus: usb0-vbus {
		pinctrl-0 = <&usb0_vbus_pin_a>;
		gpio = <&pio 7 17 0>;
		status = "okay";
	};

	reg_usb1_vbus: usb1-vbus {
		status = "okay";
	};

	reg_usb2_vbus: usb2-vbus {
		status = "okay";
	};

	reg_vmmc3: vmmc3 {
		compatible = "regulator-fixed";
		pinctrl-names = "default";
		pinctrl-0 = <&vmmc3_pin_cubietruck>;
		regulator-name = "vmmc3";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		enable-active-high;
		gpio = <&pio 7 9 0>;
	};

	rfkill-switches {
		compatible = "simple-bus";
		pinctrl-names = "default";

		rfkill_bt {
			compatible = "rfkill-gpio";
			pinctrl-0 = <&bt_pwr_pin>, <&clk_out_a_pins_a>;
			rfkill-name = "bt";
			rfkill-type = <2>;
			bt_shutdown-gpios = <0>, <&pio 7 18 0>; /* PH18 */
			bt_reset-gpios = <&pio 7 24 0>; /* PH24 */
			clocks = <&clk_out_a>;
			clock-frequency = <32768>;
		};
	};
};
